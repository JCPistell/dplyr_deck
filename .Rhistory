ls()
.libPaths()
install.packages("ggplot2")
library(ggplot2)
x <- rnorm(100)
y <- rnorm(100_)
y <- rnorm(100)
plot(x, y)
data(mtcars)
g <- ggplot(data=mtcars, aes(y=mpg, x=hp, colour = factor(cyl)))
g + geom_point(size = 3)
install.packages("dplyr")
install.packages(devtools)
install.packages("devtools")
.libPaths()
getwd()
setwd("~/Scripts")
ls()
x <- rnorm(100)
y <- rnorm(100)
fit <- lm(y~x)
fit
summary(fit)
str(fit)
fit$coefficients
fit$residuals
plot(x, y)
abline(fit)
summary(fit)
qqplot(fit)
?qqplot
qqplot(x, y)
data(mtcars)
mtcars
pairs(mtcars)
cars <- mtcars[,1:5]
cars
pairs(cars)
pairs(cars, col="steelblue")
pairs(cars, col=mpg)
pairs(cars, col=cars$mpg)
?plot
plot(cars$hp, cars$mpg, col=factor(cars$cyl))
plot(cars$hp, cars$mpg, col=factor(cars$cyl), cex=18)
plot(cars$hp, cars$mpg, col=factor(cars$cyl), cex=22)
plot(cars$hp, cars$mpg, col=factor(cars$cyl), cex=4)
plot(cars$hp, cars$mpg, col=factor(cars$cyl), cex=2)
?plot
plot(cars$hp, cars$mpg, col=factor(cars$cyl), cex=2, pch=16)
install.packages("caret")
install.packages("jsonlite")
x <- c("RMySQL", "tidyr", "stringr", "lubridate", "htmlwidgets", "googleVis", "shiny", "xtable", "zoo", "xts", "quantmod", "parallel", "data.table", "XML")
install.packages(x)
require(devtools)
install_github('rCharts', 'ramnathv')
install_github(ramnathv/slidify)
install_github("ramnathv/slidify")
install_github("ramnathv/slidifyLibraries")
x <- c(1,2,5)
x+1
x+ c(1, 2, 3)
x+c(1,6)
install.packages("RColorBrewer")
palette()
library(RColorBrewer)
x <- brewer.pal(8, "Dark2")
palette(x)
palette()
data(mtcars)
plot(mtcars$wt, mtcars$mpg, pch = 16, col = factor(mtcars$cyl))
display.brewer.all()
palette(brewer.pal(8, "Accent"))
palette()
plot(mtcars$wt, mtcars$mpg, pch = 16, col = factor(mtcars$cyl))
palette(brewer.pal(3, "Accent"))
plot(mtcars$wt, mtcars$mpg, pch = 16, col = factor(mtcars$cyl))
palette("default")
palette()
palette(brewer.pal(8, "Accent"))
q()
palette()
data <- read.csv("Animals2.csv")
head(data)
library(ggplot2)
g <- ggplot(data = data, aes(x = body, y=brain))
g _ geom_point()
g + geom_point()
g <- ggplot(data = data, aes(x = body, y=brain, label=x))
g + geom_point(size = 3, colour = "lightblue") + geom_text()
g <- ggplot(data = data, aes(x = body, y=brain, label=X))
g + geom_point(size = 3, colour = "lightblue") + geom_text()
getwd()
q()
x <- (1, 2, 3, 4)
x <- c(1, 2, 3, 4)
y <- c(5, 6)
x + y
?append
append(x, y)
append(x, y, after = 2)
c(x, y)
x[2] <- 8
x
?array
x <- 3
x
x <- 5
x
x <- 3 + 5
x
x <- mean(rnorm(100))
x
class(x)
class(z)
x <- "dog"
x
class(x)
x <- bird
x <- list(a = "one", b = "tw0", c = 3)
x
x$a
x$b
x$c
nested <- list(a = "dog", b = "cat", c = list(dinosaur = "trex", bird = "crow"))
nested
nested$c
nested$c$dinosaur
nested
nested[1]
nested[2]
nested[3]
x <- (1, 3, 5, 7)
x <- c(1, 3, 5, 7)
vector <- c(2, 4, 6, 8)
x
vector
x[1]
x[2]
x[6]
pets <- c("dog", "cat", "dragon")
pets
pets[1]
test <- c(1, "two")
test
test[1] + 3
data(mtcars)
mtcars
View(mtcars)
class(mtcars)
head(mtcars)
names(mtcars)
n <- names(mtcars)
n[3]
names(mtcars)[1] <- "MPG"
tail(mtcars)
head(mtcars, 10)
?head
mtcars[1,1]
mtcars[c(1, 3), 2]
1:10
mtcars[1:5, 2]
mtcars[,2]
mtcars[1,]
mtcars$MPG
mean(mtcars$MPG)
median(mtcars$MPG)
mtcars$meanMPG <- mean(mtcars$MPG)
head(mtcars)
View(mtcars)
cars <- mtcars[c(1,12, 3:11),]
head(cars)
View(cars)
cars <- mtcars[c(1,12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11),]
View(cars)
cars <- mtcars[,c(1,12, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)]
cars <- mtcars[,c(1,12, 3:11)]
x <- c(1, 3, 5, 7)
y <- c(2, 4)
x + y
c(x, y)
y <- c(2, 4, 6)
x + y
fit <- lm(MPG ~ hp)
fit <- lm(MPG ~ hp, ddata = mtcars)
fit <- lm(MPG ~ hp, data = mtcars)
fit
class(fit)
str(fit)
summary(fit)
str(summary(fit))
summary(fit)$r.squared
fit <- lm(MPG ~ . , data = mtcars)
summary(fit)
mtcars$cyl <- as.factor(mtcars$cyl)
class(mtcars$cyl)
mtcars$cyl
fit <- lm(MPG ~ ., data = mtcars)
summary(fit)
?read.csv
View(mtcars)
mtcars[3,]
plot(mtcars$wt, mtcars$MPG)
plot(mtcars$wt, mtcars$MPG, type = "l")
plot(mtcars$wt, mtcars$MPG, cex = 5)
plot(mtcars$wt, mtcars$MPG, cex = 5, pch = 16)
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = 16)
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = 12)
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = 12, col = "red")
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = 16, col = "red")
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = 16, col = mtcars$cyl)
plot(mtcars$wt, mtcars$MPG, cex = 1.3, pch = mtcars$cyl, col = "red")
boxplot(mtcars$MPG, mtcars$cyl)
q()
pets <- factor(c("cat", "dog", "cat", "goat", "cat", "velociraptor"))
pets
levels(pets)
table(pets)
p <- c("cat", "dog", "cat", "goat", "cat", "velociraptor")
table(p)
levels(pets)
pets[levels(pets) == "dog"]
pets == "dog"
sum(pets == "cat")
dat <- data.frame(first = c(1,2,3), second=c("red", "blue","green"), third=c(4, 5, 6), row.names = c("a", "b","c"))
dat
dat[1,]
class(dat[1,])
dat[1,2]
?data.frame
dat <- data.frame(first = c(1,2,3), second=c("red", "blue","green"), third=c(4, 5, 6), row.names = c("a", "b","c"), stringsAsFactors = F)
dat[1,2]
class(dat$second)
letters()
?letters
letters
state.abb
length(state.abb)
class(mtcars[,1])
class(mtcars[1,])
?c
?seq
x <- (1, 2, 3)
x <- c(1, 2, 3)
y <- c(4, 5, 6)
x+y
c(x, y)
exp(1)
mtcars
data(mtcars)
mtcars$cyl <- as.factor(mtcars$cyl)
boxplot(mtcars$mpg ~ mtcars$cyl)
sample(50, 1:100)
?sample
sample(50, 10)
t <- seq(1, 24)
x <- sample(50, 24)
plot(x, t, type = 'l')
plot(t, x, type = 'l')
x <- c("a", "b", "c")
y <- c("x", "y", "z")
x + y
:10
seq(10)
seq(100, by=20)
seq(100, by = 20)
library(devtools)
install_github('htmlwidgets/sparkline')
library(sparkline)
x = rnorm(50)
sparkline(x)
sparkline(x, type = 'bar')
sparkline(x, type = 'box')
class(sparkline(x))
install.packages("sparkTable")
install.packages("Cairo")
?map
?Map
ls()
rm(list = ls())
q()
install.packages("RMySQL")
install.packages("RMySQL")
ls()
grade <- "moo"
lettergrade <- 0
if (grade >= 90) {
lettergrade <- "A"
print(lettergrade)
}else if (grade >= 80){
lettergrade <- "B"
print(lettergrade)
} else if (grade >=70){
lettergrade <- "C"
print(lettergrade)
} else if (grade >= 60) {
lettergrade <- "D"
print(lettergrade)
} else if (grade >= 0){
lettergrade <- "F"
print(lettergrade)
} else{
print("unrecognized entry")
}
grade
as.numeric(grade)
ls
grade
NA > 1
grade >= 90
grade > 90
grade
"moo" > 90
"foo" > 5
?class
is.character("foo")
is.character(5)
"moo" > 100
"moo" > 1000
"moo" > 1000000000000000000000000
"moo" > "moo"
"moo" > "fo"
"moo" > "1000"
"moo" > "taco"
"a" > "b"
"c" > "b"
"c" > "ba"
"a" > 1
"1" > "2"
"2" > "1"
"m" > "noo"
"m" > "abba"
"mp" > "no"
"n" > "mooooooooooooo"
grade <- "moo"
lettergrade <- 0
if (is.character(grade)) {
lettergrade <- NA
print("Unrecognized character string")
} else if (grade >=90) {
lettergrade <- "A"
print(lettergrade)
} else if (grade >= 80){
lettergrade <- "B"
print(lettergrade)
} else if (grade >=70){
lettergrade <- "C"
print(lettergrade)
} else if (grade >= 60) {
lettergrade <- "D"
print(lettergrade)
} else {
lettergrade <- "F"
print(lettergrade)
}
grade <- 84
lettergrade <- 0
if (is.character(grade)) {
lettergrade <- NA
print("Unrecognized character string")
} else if (grade >=90) {
lettergrade <- "A"
print(lettergrade)
} else if (grade >= 80){
lettergrade <- "B"
print(lettergrade)
} else if (grade >=70){
lettergrade <- "C"
print(lettergrade)
} else if (grade >= 60) {
lettergrade <- "D"
print(lettergrade)
} else {
lettergrade <- "F"
print(lettergrade)
}
"z" > "Zaskdjfalksdfalkdsjbvalksjdbfkjsadbflkajsbdlakuefa"
"z" > "Z"
"Z" > "zaosidjfadsngaoiudshrelkfaudlkjvadlijabglkajdsdelkjfasbdv"
library(ggplot2)
library(dplyr)
library(tidyr)
library(knitr)
data(mtcars)
head(mtcars)
filter(mtcars, mpg > 20 & hp > 150)
filter(mtcars, mpg > 20 & hp > 100
)
mtcars$cars <- rownames(mtcars)
mtcars$cars <- rownames(mtcars)
mtcarsSelect <- select(mtcars, cars, mpg:hp)
mtcarsSelect
mtcarsFilter <- filter(mtcars, mpg > 20 & hp > 100)
mtcarsFilter
mtcars2 <- select(mtcars, cars, mpg:wt)
mtcars2 <- filter(mtcars2, mpg > 20 & hp > 100)
mtcars2
diamonds2 <- transmute(diamonds, volume = x * y * z)
kable(head(diamonds2, 6))
mtcarsSumm <- group_by(mtcars, cyl, carb) %>% summarise(Count = n(), meanMPG = mean(mpg),
totalWT = sum(wt))
mtcarsSumm
kable(mtcarsSumm)
library(RColorBrewer)
data("ChickWeight")
head(ChickWeight)
chickSumm <- ChickWeight %>% group_by(Diet, Time) %>% summarise(meanWeight = mean(weight))
chickSumm
chickSumm$Time <- factor(chickSumm$Time)
g <- ggplot(data = chickSumm, aes(x = Time, y = meanWeight, fill = Diet))
g + geom_bar(colour = "black", position = "dodge", stat = "identity") +
scale_fill_brewer(palette = "BuPu")
g + geom_bar(colour = "black", position = "dodge", stat = "identity") +
scale_fill_brewer(palette = "BuPu") + ylab("Mean Weight")
data(mtcars)
data(iris)
data("ChickWeight")
data(mtcars)
mtcars$cars <- rownames(mtcars)
mtcarsSelect <- select(mtcars, mpg, cyl, hp, wt)
head(mtcarsSelect)
head(mtcars)
mtcarsSelect <- select(mtcars, cars, mpg:hp)
head(mtcarsSelect)
mtcarsFilter <- filter(mtcars, mpg > 20 & hp > 100)
mtcarsFilter
library(dplyr)
library(tidyr)
library(ggplot2)
data(mtcars)
ntile(mtcars, mpg)
mtcars
?ntile
ntile(mtcars$mpg, 4)
mtcars$mpgRank <- min_rank(mtcars$mpg)
mtcars
mtcars$mpgRank <- dense_rank(mtcars$mpg)
mtcars
mtcars$mpgRank <- dense_rank(desc(mtcars$mpg))
mtcars
?cumall
cumall(mtcars$mpgRank)
Batting
data(Batting)
cumsum(mtcars$mpgRank)
setwd("functions_deck/speed/")
list.files()
library(slidify)
library(dplyr)
library(tidyr)
library(ggplot2)
library(knitr)
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
slidify("index.Rmd")
browseURL("index.html")
